{"version":3,"sources":["Components/ShowTodo.js","Components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["ShowTodo","props","react_default","a","createElement","className","task","onClick","onSelcet","id","Todo","_useState","useState","_useState2","Object","slicedToArray","setTask","_useState3","_useState4","data","setData","deleteItem","finalData","filter","curEle","index","onSubmit","e","preventDefault","newData","concat","toConsumableArray","type","value","onChange","target","map","Components_ShowTodo","key","App","Components_Todo","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"oMAuBeA,MArBf,SAAkBC,GACd,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAEXH,EAAAC,EAAAC,cAAA,UAAKH,EAAMK,OAGfJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,UAAQG,QAAS,WACbN,EAAMO,SAASP,EAAMQ,MADzB,eCgDDC,MA1Df,WAAgB,IAAAC,EAEYC,mBAAS,iBAFrBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAELL,EAFKO,EAAA,GAECG,EAFDH,EAAA,GAAAI,EAGYL,mBAAS,IAHrBM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAGLE,EAHKD,EAAA,GAGCE,EAHDF,EAAA,GAiBNG,EAAY,SAAClB,GACf,IAAMmB,EAAYH,EAAKI,OAAO,SAACC,EAAOC,GAClC,OAAOA,IAAUtB,IAErBiB,EAAQE,IAGZ,OACIpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0DACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,6BAGRH,EAAAC,EAAAC,cAAA,QAAMsB,SAxBA,SAACC,GACnBA,EAAEC,iBACF,IAAMC,EAAUvB,EAChBc,EAAO,GAAAU,OAAAhB,OAAAiB,EAAA,EAAAjB,CAAKK,GAAL,CAAWU,KAElBb,EAAQ,MAoBQd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,SAAOK,GAAG,aAAauB,KAAK,OAAO3B,UAAU,eAAe4B,MAAO3B,EAAM4B,SA/B7E,SAACP,GACrBX,EAAQW,EAAEQ,OAAOF,WAgCG/B,EAAAC,EAAAC,cAAA,UAAQ4B,KAAK,SAAS3B,UAAU,mCAAhC,cAIPc,EAAKiB,IAAI,SAACH,EAAOR,GACd,OAAOvB,EAAAC,EAAAC,cAACiC,EAAD,CACHC,IAAKb,EACLhB,GAAIgB,EACJnB,KAAM2B,EACNzB,SAAUa,UCrCvBkB,MATf,WACI,OACIrC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACoC,EAAD,QCKGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAjB,EAAA,GAAAkB,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHvD,EAAAC,EAAAC,cAACF,EAAAC,EAAMuD,WAAP,KACExD,EAAAC,EAAAC,cAACuD,EAAD,QAOJlB","file":"static/js/main.2be38b8c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction ShowTodo(props) {\r\n    return (\r\n        <div className='container'>\r\n            <div className=\"row my-2\">\r\n\r\n                <div className=\"col-6\">\r\n\r\n                    <h6>{props.task}</h6>  \r\n\r\n                </div>\r\n                <div className=\"col-6\">\r\n                <button onClick={()=>{\r\n                    props.onSelcet(props.id)\r\n                }}>X</button>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowTodo","import React, { useState } from 'react'\r\nimport ShowTodo from './ShowTodo'\r\nimport './Todo.css'\r\nfunction Todo() {\r\n\r\n    const [task, setTask] = useState(\"add some task\")  \r\n    const [data, setData] = useState([])      //// to store data from user\r\n\r\n    const onChangeHandler = (e) => {\r\n        setTask(e.target.value)          ////to stop by defualt property such as lose data when reload etc.\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const newData = task;\r\n        setData([...data, newData])   //// ...data is used for store the old task and state newdata for for update new task\r\n\r\n        setTask('')     //// used for clean input area after added task\r\n    }\r\n\r\n    const deleteItem =(a)=>{\r\n        const finalData = data.filter((curEle,index)=>{    ////\r\n            return index !== a;\r\n        })\r\n        setData(finalData)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center align-items-center main-row\">\r\n                <div className=\"col shadow main-col bg-white\">\r\n                    <div className=\"row bg-primary text-white\">\r\n                        <div className=\"col  p-2\">\r\n                            <h4 className='text-center'>Todo App Using React JS</h4>\r\n                        </div>\r\n                    </div>\r\n                    <form onSubmit={submitHandler}>\r\n                        <div className=\"row justify-content-between text-white p-2\">\r\n                            <div className=\"form-group flex-fill mb-2 col-9\">\r\n                                <input id=\"todo-input\" type=\"text\" className=\"form-control\" value={task} onChange={onChangeHandler} />\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary mb-2 ml-2 col-3\">Add todo</button>\r\n                        </div>\r\n                    </form>\r\n\r\n                    {data.map((value, index) => {    ///data.map is an array here in this we have value of arrey elemennts\r\n                        return <ShowTodo\r\n                            key={index}             ///\r\n                            id={index}            /// here  id is assigning index no. of an array\r\n                            task={value}\r\n                            onSelcet={deleteItem}  ////\r\n                        />\r\n                    })}\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo","import React from 'react'\nimport Todo from './Components/Todo';\n\n\nfunction App() {\n    return (\n        <div>\n            <Todo/>\n            \n        </div>\n    )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}